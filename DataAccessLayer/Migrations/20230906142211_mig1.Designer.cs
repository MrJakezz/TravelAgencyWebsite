// <auto-generated />
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230906142211_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Concrete.About1", b =>
                {
                    b.Property<int>("About1ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("About1ID"));

                    b.Property<string>("About1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About1Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About1Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("About1Status")
                        .HasColumnType("bit");

                    b.Property<string>("About1Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About1Title2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("About1ID");

                    b.ToTable("Abouts1");
                });

            modelBuilder.Entity("EntityLayer.Concrete.About2", b =>
                {
                    b.Property<int>("About2ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("About2ID"));

                    b.Property<string>("About2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About2Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About2Title1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("About2Title2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("About2ID");

                    b.ToTable("Abouts2");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"));

                    b.Property<string>("ContactAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ContactStatus")
                        .HasColumnType("bit");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Destination", b =>
                {
                    b.Property<int>("DestinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationID"));

                    b.Property<int>("DestinationCapacity")
                        .HasColumnType("int");

                    b.Property<string>("DestinationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationDayNight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DestinationPrice")
                        .HasColumnType("float");

                    b.Property<bool>("DestinationStatus")
                        .HasColumnType("bit");

                    b.HasKey("DestinationID");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Feature1", b =>
                {
                    b.Property<int>("Feature1ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Feature1ID"));

                    b.Property<string>("Feature1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature1Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Feature1Status")
                        .HasColumnType("bit");

                    b.Property<string>("Feature1Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Feature1ID");

                    b.ToTable("Features1");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Feature2", b =>
                {
                    b.Property<int>("Feature2ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Feature2ID"));

                    b.Property<string>("Feature2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature2Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Feature2Status")
                        .HasColumnType("bit");

                    b.Property<string>("Feature2Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Feature2ID");

                    b.ToTable("Features2");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Guide", b =>
                {
                    b.Property<int>("GuideID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuideID"));

                    b.Property<string>("GuideDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuideImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuideInstagramURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuideName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GuideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("GuideTwitterURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuideID");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Newsletter", b =>
                {
                    b.Property<int>("NewsletterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsletterID"));

                    b.Property<string>("NewsletterMail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsletterID");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SubAbout", b =>
                {
                    b.Property<int>("SubAboutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubAboutID"));

                    b.Property<string>("SubAboutDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubAboutTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubAboutID");

                    b.ToTable("SubAbouts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Testimonial", b =>
                {
                    b.Property<int>("TestimonialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestimonialID"));

                    b.Property<string>("TestimonialClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestimonialClientImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestimonialComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TestimonialStatus")
                        .HasColumnType("bit");

                    b.HasKey("TestimonialID");

                    b.ToTable("Testimonials");
                });
#pragma warning restore 612, 618
        }
    }
}
